{"ast":null,"code":"import _classCallCheck from\"/home/ryvaldie/General-Project/scrum-poker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ryvaldie/General-Project/scrum-poker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ryvaldie/General-Project/scrum-poker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ryvaldie/General-Project/scrum-poker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import firebase from'../../FirebaseConfig';import Cards from'../../components/Cards';import Card from'../../components/Card';var fibonacciCard=['0','1/2','1','2','3','5','8','13','21','?','Coffe?'];var Lobby=/*#__PURE__*/function(_React$Component){_inherits(Lobby,_React$Component);var _super=_createSuper(Lobby);function Lobby(props){var _this;_classCallCheck(this,Lobby);_this=_super.call(this,props);_this.handleSubmit=function(event){// event.preventDefault();\nvar sessions=_this.state.button_status==='Reveal Cards';var stringRef=_this.props.location.state.room_name;firebase.database().ref(stringRef).update({sessions:sessions});if(sessions){var members=[];_this.state.team_member.map(function(member){return members.push({name:member.name,story_point:member.story_point,status:false});});firebase.database().ref(stringRef).update({team_member:members});_this.setState({button_status:'Reset'});}else{_this.setState({button_status:'Reveal Cards'});}};_this.handleInputChange=function(event){var value=event.target.value;_this.updateUserStory(value);};_this.updateUserStory=function(user_story){var stringRef=_this.props.location.state.room_name;firebase.database().ref(stringRef).update({story:user_story});};_this.getData=function(){var ref=firebase.database().ref(_this.props.location.state.room_name);ref.on('value',function(snapshot){var team_member=snapshot.val()['team_member'];_this.setState({team_member:team_member,story:snapshot.val()['story'],isCreator:snapshot.val()['creator']===_this.props.location.state.name,sessions:snapshot.val()['sessions']});if(_this.state.isCreator){_this.setState({button_status:_this.state.sessions?'Reset':'Reveal Cards'});}if(!snapshot.val()['sessions']){_this.setState({static_member:team_member});}});};_this.joinRoom=function(){var stringRef=_this.props.location.state.room_name+'/team_member';var ref=firebase.database().ref(stringRef);var listener=ref.on('value',function(snapshot){ref.off('value',listener);var team_member=[];var data=snapshot.val();if(data!==null){data.map(function(_ref){var name=_ref.name,story_point=_ref.story_point,status=_ref.status;return team_member.push({name:name,story_point:story_point,status:status});});}team_member.push({name:_this.props.location.state.name,story_point:'',status:false});var filterMembers=team_member.filter(function(member){return!team_member[member.name]&&(team_member[member.name]=true);});firebase.database().ref(stringRef).update(filterMembers);});};_this.state={button_status:'Reveal Cards',team_member:[],static_member:[],story:'',isCreator:false,sessions:false};return _this;}_createClass(Lobby,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"App-header\"},/*#__PURE__*/React.createElement(\"h3\",null,\"The story goes like this:\"),this.state.isCreator?/*#__PURE__*/React.createElement(\"input\",{type:\"text\",ref:\"user_story\",name:\"user_story\",className:\"Input-text\",placeholder:this.state.story===\"\"?\"Your user story goes here\":this.state.story,onChange:this.handleInputChange}):/*#__PURE__*/React.createElement(\"p\",null,this.state.story),this.state.isCreator?/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary\",onClick:this.handleSubmit},this.state.button_status):'',/*#__PURE__*/React.createElement(\"hr\",{style:{color:'white',backgroundColor:'white',height:.5,width:'100%'}}),/*#__PURE__*/React.createElement(\"div\",{style:{margin:'5px'}},/*#__PURE__*/React.createElement(\"p\",{style:{fontSize:'14px'}},\"Room Name: \",this.props.location.state.room_name)),/*#__PURE__*/React.createElement(\"div\",{className:\"centerDiv\"},/*#__PURE__*/React.createElement(\"ul\",null,this.state.team_member.map(function(member,index){return/*#__PURE__*/React.createElement(\"li\",{className:\"cards__card\",key:member.name},/*#__PURE__*/React.createElement(Card,{card:member.name===_this2.props.location.state.name||_this2.state.sessions?member.story_point===''?member.name:member.story_point:''}),/*#__PURE__*/React.createElement(\"p\",{style:member.status?{color:'white',fontWeight:'bold'}:{color:'grey'}},member.name));}))),/*#__PURE__*/React.createElement(\"hr\",{style:{color:'white',backgroundColor:'white',height:.5,width:'100%'}}),/*#__PURE__*/React.createElement(Cards,{cards:fibonacciCard,room_name:this.props.location.state.room_name,name:this.props.location.state.name,sessions:this.state.sessions,team_member:this.state.team_member}));}},{key:\"componentDidMount\",value:function componentDidMount(){var prevState=this.props.location.state;if(prevState.status==='join'){this.joinRoom();}this.getData();}}]);return Lobby;}(React.Component);export default Lobby;","map":{"version":3,"sources":["/home/ryvaldie/General-Project/scrum-poker/src/containers/Lobby/Lobby.js"],"names":["React","firebase","Cards","Card","fibonacciCard","Lobby","props","handleSubmit","event","sessions","state","button_status","stringRef","location","room_name","database","ref","update","members","team_member","map","member","push","name","story_point","status","setState","handleInputChange","value","target","updateUserStory","user_story","story","getData","on","snapshot","val","isCreator","static_member","joinRoom","listener","off","data","filterMembers","filter","color","backgroundColor","height","width","margin","fontSize","index","fontWeight","prevState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport firebase from '../../FirebaseConfig';\nimport Cards from '../../components/Cards';\nimport Card from '../../components/Card';\n\nconst fibonacciCard = ['0', '1/2', '1', '2', '3', '5', '8', '13', '21', '?', 'Coffe?'];\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      button_status: 'Reveal Cards',\n      team_member: [],\n      static_member: [],\n      story: '',\n      isCreator: false,\n      sessions: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <h3>The story goes like this:</h3>\n        {\n          this.state.isCreator ? (\n            <input type=\"text\" ref='user_story' name='user_story' className=\"Input-text\" placeholder={\n              this.state.story === \"\" ? (\n                \"Your user story goes here\"\n              ) : (\n                  this.state.story\n                )\n            } onChange={this.handleInputChange} />\n          ) : (\n              <p>{this.state.story}</p>\n            )\n        }\n        {\n          this.state.isCreator ? (\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmit}>{this.state.button_status}</button>\n          ) : ('')\n        }\n        <hr style={{ color: 'white', backgroundColor: 'white', height: .5, width: '100%' }} />\n        <div style={{ margin: '5px' }}>\n          <p style={{ fontSize: '14px' }}>Room Name: {this.props.location.state.room_name}</p>\n        </div>\n        <div className=\"centerDiv\">\n          <ul>\n            {\n              this.state.team_member.map((member, index) =>\n                <li className=\"cards__card\" key={member.name}>\n                  {/* <Card card={member.name} /> */}\n                  <Card card={member.name === this.props.location.state.name\n                    || this.state.sessions ? (member.story_point === '' ? (member.name) : (member.story_point)) : ('')} />\n                  <p style={\n                    member.status ? (\n                      { color: 'white', fontWeight: 'bold' }\n                    ) : (\n                        { color: 'grey' }\n                      )\n                  }>{member.name}</p>\n                </li>\n              )\n            }\n          </ul>\n        </div>\n        <hr style={{ color: 'white', backgroundColor: 'white', height: .5, width: '100%' }} />\n        <Cards cards={fibonacciCard} room_name={this.props.location.state.room_name}\n          name={this.props.location.state.name}\n          sessions={this.state.sessions}\n          team_member={this.state.team_member} />\n      </div>\n    );\n  }\n\n  handleSubmit = (event) => {\n    // event.preventDefault();\n    let sessions = this.state.button_status === 'Reveal Cards';\n    let stringRef = this.props.location.state.room_name;\n    firebase.database().ref(stringRef).update({ sessions: sessions });\n    if (sessions) {\n      let members = [];\n      this.state.team_member.map(member => (members.push({ name: member.name, story_point: member.story_point, status: false })));\n      firebase.database().ref(stringRef).update({ team_member: members });\n      this.setState({ button_status: 'Reset' });\n    } else {\n      this.setState({ button_status: 'Reveal Cards' });\n    }\n  }\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n    this.updateUserStory(value);\n  }\n\n  updateUserStory = (user_story) => {\n    let stringRef = this.props.location.state.room_name;\n    firebase.database().ref(stringRef).update({ story: user_story });\n  }\n\n  getData = () => {\n    let ref = firebase.database().ref(this.props.location.state.room_name);\n    ref.on('value', snapshot => {\n      const team_member = snapshot.val()['team_member'];\n      this.setState({\n        team_member: team_member, story: snapshot.val()['story']\n        , isCreator: snapshot.val()['creator'] === this.props.location.state.name, sessions: snapshot.val()['sessions']\n      });\n      if (this.state.isCreator) {\n        this.setState({button_status: this.state.sessions ? ('Reset'):('Reveal Cards')})\n      }\n      if (!snapshot.val()['sessions']) {\n        this.setState({ static_member: team_member });\n      }\n    });\n  }\n\n  joinRoom = () => {\n    let stringRef = this.props.location.state.room_name + '/team_member';\n    let ref = firebase.database().ref(stringRef);\n    let listener = ref.on('value', snapshot => {\n      ref.off('value', listener);\n      const team_member = [];\n      let data = snapshot.val();\n      if (data !== null) {\n        data.map(({ name, story_point, status }) => (team_member.push({ name, story_point, status })));\n      }\n      team_member.push({\n        name: this.props.location.state.name,\n        story_point: '',\n        status: false\n      });\n      const filterMembers = team_member.filter((member) => !team_member[member.name] && (team_member[member.name] = true));\n      firebase.database().ref(stringRef).update(filterMembers);\n    });\n  }\n\n  componentDidMount() {\n    let prevState = this.props.location.state;\n    if (prevState.status === 'join') {\n      this.joinRoom();\n    }\n    this.getData();\n  }\n\n}\n\nexport default Lobby;\n"]},"metadata":{},"sourceType":"module"}