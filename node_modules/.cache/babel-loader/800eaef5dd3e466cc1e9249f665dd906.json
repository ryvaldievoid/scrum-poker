{"ast":null,"code":"var _jsxFileName = \"/home/ryvaldie/General-Project/scrum-poker/src/containers/Lobby/Lobby.js\";\nimport React from 'react';\nimport firebase from '../../FirebaseConfig';\nimport Cards from '../../components/Cards';\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getStories = () => {\n      let stringRef = this.props.location.state.room_name + '/story';\n      let ref = firebase.database().ref(stringRef);\n      ref.on('value', snapshot => {\n        this.setState({\n          story: snapshot.val()\n        });\n      });\n    };\n\n    this.getTeamMember = () => {\n      let stringRef = this.props.location.state.room_name + '/team_member';\n      let ref = firebase.database().ref(stringRef);\n      ref.on('value', snapshot => {\n        const data = snapshot.val();\n        this.setState({\n          team_member: []\n        });\n\n        if (data !== null) {\n          data.map(({\n            name,\n            story_point\n          }) => this.state.team_member.push({\n            name,\n            story_point\n          }));\n        }\n\n        console.log(\"member: \" + this.state.team_member);\n      });\n    };\n\n    this.joinRoom = () => {\n      let stringRef = this.props.location.state.room_name + '/team_member';\n      let ref = firebase.database().ref(stringRef);\n      let listener = ref.on('value', snapshot => {\n        ref.off('value', listener);\n        const team_member = [];\n        let data = snapshot.val();\n\n        if (data !== null) {\n          data.map(({\n            name,\n            story_point\n          }) => team_member.push({\n            name,\n            story_point\n          }));\n        }\n\n        team_member.push({\n          name: this.props.location.state.name,\n          story_point: ''\n        });\n        const filterMembers = team_member.filter(member => !team_member[member.name] && (team_member[member.name] = true));\n        firebase.database().ref(stringRef).update(filterMembers);\n      });\n    };\n\n    this.state = {\n      team_member: [],\n      story: ''\n    };\n  }\n\n  render() {\n    const state = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Cards, {\n      cards: ['0', '1/2', '1', '2', '3', '5', '8', '13', '21', '?', 'Coffe?'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, state.team_member.map(({\n      name,\n      story_point\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }\n    }, \"AAAA\"))))), /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, state.story)));\n  }\n\n  componentDidMount() {\n    let prevState = this.props.location.state;\n\n    if (prevState.status === 'join') {\n      this.joinRoom();\n    }\n\n    this.getTeamMember();\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/home/ryvaldie/General-Project/scrum-poker/src/containers/Lobby/Lobby.js"],"names":["React","firebase","Cards","Lobby","Component","constructor","props","getStories","stringRef","location","state","room_name","ref","database","on","snapshot","setState","story","val","getTeamMember","data","team_member","map","name","story_point","push","console","log","joinRoom","listener","off","filterMembers","filter","member","update","render","componentDidMount","prevState","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport firebase from '../../FirebaseConfig';\nimport Cards from '../../components/Cards';\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      team_member: [],\n      story: '',\n    };\n  }\n\n  render() {\n    const state = this.state;\n    return (\n      <div>\n        <Cards cards={['0', '1/2', '1', '2', '3', '5', '8', '13', '21', '?', 'Coffe?']} />\n        <ul>\n          {\n            state.team_member.map(({ name, story_point }) => (\n              <li>\n                <div>\n                  <h1>AAAA</h1>\n                </div>\n              </li>\n            ))\n          }\n        </ul>\n        <header className=\"App-header\">\n          <h1>{state.story}</h1>\n        </header>\n      </div>\n    );\n  }\n\n  getStories = () => {\n    let stringRef = this.props.location.state.room_name + '/story';\n    let ref = firebase.database().ref(stringRef);\n    ref.on('value', snapshot => {\n      this.setState({story: snapshot.val()});\n    });\n  }\n\n  getTeamMember = () => {\n    let stringRef = this.props.location.state.room_name + '/team_member';\n    let ref = firebase.database().ref(stringRef);\n    ref.on('value', snapshot => {\n      const data = snapshot.val();\n      this.setState({ team_member: [] });\n      if (data !== null) {\n        data.map(({ name, story_point }) =>\n          this.state.team_member.push({ name, story_point })\n        );\n      }\n      console.log(\"member: \" + this.state.team_member);\n    });\n  }\n\n  joinRoom = () => {\n    let stringRef = this.props.location.state.room_name + '/team_member';\n    let ref = firebase.database().ref(stringRef);\n    let listener = ref.on('value', snapshot => {\n      ref.off('value', listener);\n      const team_member = [];\n      let data = snapshot.val();\n      if (data !== null) {\n        data.map(({ name, story_point }) => (team_member.push({ name, story_point })));\n      }\n      team_member.push({\n        name: this.props.location.state.name,\n        story_point: '',\n      });\n      const filterMembers = team_member.filter((member) => !team_member[member.name] && (team_member[member.name] = true));\n      firebase.database().ref(stringRef).update(filterMembers);\n    });\n  }\n\n  componentDidMount() {\n    let prevState = this.props.location.state;\n    if (prevState.status === 'join') {\n      this.joinRoom();\n    }\n    this.getTeamMember();\n  }\n\n}\n\nexport default Lobby;\n"]},"metadata":{},"sourceType":"module"}