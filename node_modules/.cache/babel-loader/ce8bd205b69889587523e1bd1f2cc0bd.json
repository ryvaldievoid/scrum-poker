{"ast":null,"code":"var _jsxFileName = \"/home/ryvaldie/General-Project/scrum-poker/src/containers/Lobby/Lobby.js\";\nimport React from 'react';\nimport firebase from '../../FirebaseConfig';\nimport Cards from '../../components/Cards';\nimport Card from '../../components/Card';\nconst fibonacciCard = ['0', '1/2', '1', '2', '3', '5', '8', '13', '21', '?', 'Coffe?'];\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      // event.preventDefault();\n      let sessions = this.state.button_status === 'Reveal Cards';\n      let stringRef = this.props.location.state.room_name;\n      firebase.database().ref(stringRef).update({\n        sessions: sessions\n      });\n\n      if (sessions) {\n        let members = [];\n        this.state.team_member.map(member => members.push({\n          name: member.name,\n          story_point: member.story_point,\n          status: false\n        }));\n        firebase.database().ref(stringRef).update({\n          team_member: members\n        });\n        this.setState({\n          button_status: 'Reset'\n        });\n      } else {\n        this.setState({\n          button_status: 'Reveal Cards'\n        });\n      }\n    };\n\n    this.handleInputChange = event => {\n      const {\n        value\n      } = event.target;\n      this.updateUserStory(value);\n    };\n\n    this.updateUserStory = user_story => {\n      let stringRef = this.props.location.state.room_name;\n      firebase.database().ref(stringRef).update({\n        story: user_story\n      });\n    };\n\n    this.getData = () => {\n      let ref = firebase.database().ref(this.props.location.state.room_name);\n      ref.on('value', snapshot => {\n        const team_member = snapshot.val()['team_member'];\n        this.setState({\n          team_member: team_member,\n          story: snapshot.val()['story'],\n          isCreator: snapshot.val()['creator'] === this.props.location.state.name,\n          sessions: snapshot.val()['sessions']\n        });\n\n        if (this.state.isCreator) {\n          this.setState({\n            button_status: this.state.sessions ? 'Reset' : 'Reveal Cards'\n          });\n        }\n\n        if (!snapshot.val()['sessions']) {\n          this.setState({\n            static_member: team_member\n          });\n        }\n      });\n    };\n\n    this.joinRoom = () => {\n      let stringRef = this.props.location.state.room_name + '/team_member';\n      let ref = firebase.database().ref(stringRef);\n      let listener = ref.on('value', snapshot => {\n        ref.off('value', listener);\n        const team_member = [];\n        let data = snapshot.val();\n\n        if (data !== null) {\n          data.map(({\n            name,\n            story_point,\n            status\n          }) => team_member.push({\n            name,\n            story_point,\n            status\n          }));\n        }\n\n        team_member.push({\n          name: this.props.location.state.name,\n          story_point: '',\n          status: false\n        });\n        const filterMembers = team_member.filter(member => !team_member[member.name] && (team_member[member.name] = true));\n        firebase.database().ref(stringRef).update(filterMembers);\n      });\n    };\n\n    this.state = {\n      button_status: 'Reveal Cards',\n      team_member: [],\n      static_member: [],\n      story: '',\n      isCreator: false,\n      sessions: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"The story goes like this:\"), this.state.isCreator ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"user_story\",\n      name: \"user_story\",\n      className: \"Input-text\",\n      placeholder: this.state.story === \"\" ? \"Your user story goes here\" : this.state.story,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, this.state.story), this.state.isCreator ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, this.state.button_status) : '', /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        color: 'white',\n        backgroundColor: 'white',\n        height: .5,\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Room Name: \", this.props.location.state.room_name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, this.state.team_member.map((member, index) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"cards__card\",\n      key: member.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      card: member.name === this.props.location.state.name || this.state.sessions ? member.story_point === '' ? member.name : member.story_point : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: member.status ? {\n        color: 'white',\n        fontWeight: 'bold'\n      } : {\n        color: 'grey'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, member.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        color: 'white',\n        backgroundColor: 'white',\n        height: .5,\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Cards, {\n      cards: fibonacciCard,\n      room_name: this.props.location.state.room_name,\n      name: this.props.location.state.name,\n      sessions: this.state.sessions,\n      team_member: this.state.team_member,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  componentDidMount() {\n    let prevState = this.props.location.state;\n\n    if (prevState.status === 'join') {\n      this.joinRoom();\n    }\n\n    this.getData();\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/home/ryvaldie/General-Project/scrum-poker/src/containers/Lobby/Lobby.js"],"names":["React","firebase","Cards","Card","fibonacciCard","Lobby","Component","constructor","props","handleSubmit","event","sessions","state","button_status","stringRef","location","room_name","database","ref","update","members","team_member","map","member","push","name","story_point","status","setState","handleInputChange","value","target","updateUserStory","user_story","story","getData","on","snapshot","val","isCreator","static_member","joinRoom","listener","off","data","filterMembers","filter","render","color","backgroundColor","height","width","margin","fontSize","index","fontWeight","componentDidMount","prevState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport firebase from '../../FirebaseConfig';\nimport Cards from '../../components/Cards';\nimport Card from '../../components/Card';\n\nconst fibonacciCard = ['0', '1/2', '1', '2', '3', '5', '8', '13', '21', '?', 'Coffe?'];\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      button_status: 'Reveal Cards',\n      team_member: [],\n      static_member: [],\n      story: '',\n      isCreator: false,\n      sessions: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <h3>The story goes like this:</h3>\n        {\n          this.state.isCreator ? (\n            <input type=\"text\" ref='user_story' name='user_story' className=\"Input-text\" placeholder={\n              this.state.story === \"\" ? (\n                \"Your user story goes here\"\n              ) : (\n                  this.state.story\n                )\n            } onChange={this.handleInputChange} />\n          ) : (\n              <p>{this.state.story}</p>\n            )\n        }\n        {\n          this.state.isCreator ? (\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmit}>{this.state.button_status}</button>\n          ) : ('')\n        }\n        <hr style={{ color: 'white', backgroundColor: 'white', height: .5, width: '100%' }} />\n        <div style={{ margin: '5px' }}>\n          <p style={{ fontSize: '14px' }}>Room Name: {this.props.location.state.room_name}</p>\n        </div>\n        <div className=\"centerDiv\">\n          <ul>\n            {\n              this.state.team_member.map((member, index) =>\n                <li className=\"cards__card\" key={member.name}>\n                  {/* <Card card={member.name} /> */}\n                  <Card card={member.name === this.props.location.state.name\n                    || this.state.sessions ? (member.story_point === '' ? (member.name) : (member.story_point)) : ('')} />\n                  <p style={\n                    member.status ? (\n                      { color: 'white', fontWeight: 'bold' }\n                    ) : (\n                        { color: 'grey' }\n                      )\n                  }>{member.name}</p>\n                </li>\n              )\n            }\n          </ul>\n        </div>\n        <hr style={{ color: 'white', backgroundColor: 'white', height: .5, width: '100%' }} />\n        <Cards cards={fibonacciCard} room_name={this.props.location.state.room_name}\n          name={this.props.location.state.name}\n          sessions={this.state.sessions}\n          team_member={this.state.team_member} />\n      </div>\n    );\n  }\n\n  handleSubmit = (event) => {\n    // event.preventDefault();\n    let sessions = this.state.button_status === 'Reveal Cards';\n    let stringRef = this.props.location.state.room_name;\n    firebase.database().ref(stringRef).update({ sessions: sessions });\n    if (sessions) {\n      let members = [];\n      this.state.team_member.map(member => (members.push({ name: member.name, story_point: member.story_point, status: false })));\n      firebase.database().ref(stringRef).update({ team_member: members });\n      this.setState({ button_status: 'Reset' });\n    } else {\n      this.setState({ button_status: 'Reveal Cards' });\n    }\n  }\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n    this.updateUserStory(value);\n  }\n\n  updateUserStory = (user_story) => {\n    let stringRef = this.props.location.state.room_name;\n    firebase.database().ref(stringRef).update({ story: user_story });\n  }\n\n  getData = () => {\n    let ref = firebase.database().ref(this.props.location.state.room_name);\n    ref.on('value', snapshot => {\n      const team_member = snapshot.val()['team_member'];\n      this.setState({\n        team_member: team_member, story: snapshot.val()['story']\n        , isCreator: snapshot.val()['creator'] === this.props.location.state.name, sessions: snapshot.val()['sessions']\n      });\n      if (this.state.isCreator) {\n        this.setState({button_status: this.state.sessions ? ('Reset'):('Reveal Cards')})\n      }\n      if (!snapshot.val()['sessions']) {\n        this.setState({ static_member: team_member });\n      }\n    });\n  }\n\n  joinRoom = () => {\n    let stringRef = this.props.location.state.room_name + '/team_member';\n    let ref = firebase.database().ref(stringRef);\n    let listener = ref.on('value', snapshot => {\n      ref.off('value', listener);\n      const team_member = [];\n      let data = snapshot.val();\n      if (data !== null) {\n        data.map(({ name, story_point, status }) => (team_member.push({ name, story_point, status })));\n      }\n      team_member.push({\n        name: this.props.location.state.name,\n        story_point: '',\n        status: false\n      });\n      const filterMembers = team_member.filter((member) => !team_member[member.name] && (team_member[member.name] = true));\n      firebase.database().ref(stringRef).update(filterMembers);\n    });\n  }\n\n  componentDidMount() {\n    let prevState = this.props.location.state;\n    if (prevState.status === 'join') {\n      this.joinRoom();\n    }\n    this.getData();\n  }\n\n}\n\nexport default Lobby;\n"]},"metadata":{},"sourceType":"module"}