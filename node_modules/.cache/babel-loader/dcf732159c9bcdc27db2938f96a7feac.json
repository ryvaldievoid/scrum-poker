{"ast":null,"code":"var _jsxFileName = \"/home/ryvaldie/General-Project/scrum-poker/src/containers/Lobby/Lobby.js\";\nimport React from 'react';\nimport firebase from '../../FirebaseConfig';\nimport Cards from '../../components/Cards';\nimport Card from '../../components/Card';\nconst fibonacciCard = ['0', '1/2', '1', '2', '3', '5', '8', '13', '21', '?', 'Coffe?'];\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let sessions = this.state.button_status === 'Reveal Cards';\n      let stringRef = this.props.location.state.room_name;\n      firebase.database().ref(stringRef).update({\n        sessions: sessions\n      });\n\n      if (sessions) {\n        this.setState.button_status = 'Reset';\n      } else {\n        this.setState.button_status = 'Reveal Cards';\n      }\n    };\n\n    this.handleInputChange = event => {\n      const {\n        value\n      } = event.target;\n      this.updateUserStory(value);\n    };\n\n    this.updateUserStory = user_story => {\n      let stringRef = this.props.location.state.room_name;\n      firebase.database().ref(stringRef).update({\n        story: user_story\n      });\n    };\n\n    this.getData = () => {\n      let ref = firebase.database().ref(this.props.location.state.room_name);\n      ref.on('value', snapshot => {\n        const team_member = snapshot.val()['team_member'];\n        this.setState({\n          team_member: team_member,\n          story: snapshot.val()['story'],\n          isCreator: snapshot.val()['creator'] === this.props.location.state.name\n        });\n      });\n    };\n\n    this.joinRoom = () => {\n      let stringRef = this.props.location.state.room_name + '/team_member';\n      let ref = firebase.database().ref(stringRef);\n      let listener = ref.on('value', snapshot => {\n        ref.off('value', listener);\n        const team_member = [];\n        let data = snapshot.val();\n\n        if (data !== null) {\n          data.map(({\n            name,\n            story_point\n          }) => team_member.push({\n            name,\n            story_point\n          }));\n        }\n\n        team_member.push({\n          name: this.props.location.state.name,\n          story_point: ''\n        });\n        const filterMembers = team_member.filter(member => !team_member[member.name] && (team_member[member.name] = true));\n        firebase.database().ref(stringRef).update(filterMembers);\n      });\n    };\n\n    this.state = {\n      button_status: 'Reveal Cards',\n      team_member: [],\n      story: '',\n      isCreator: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"The story goes like this:\"), this.state.isCreator ? /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login-form\",\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"user_story\",\n      name: \"user_story\",\n      className: \"Input-text\",\n      placeholder: this.state.story === \"\" ? \"Your user story goes here\" : this.state.story,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, this.state.button_status)) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, this.state.story), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        color: 'white',\n        backgroundColor: 'white',\n        height: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, this.state.team_member.map(member => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"cards__card\",\n      key: member.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      card: member.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(Cards, {\n      cards: fibonacciCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  componentDidMount() {\n    let prevState = this.props.location.state;\n\n    if (prevState.status === 'join') {\n      this.joinRoom();\n    }\n\n    this.getData();\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/home/ryvaldie/General-Project/scrum-poker/src/containers/Lobby/Lobby.js"],"names":["React","firebase","Cards","Card","fibonacciCard","Lobby","Component","constructor","props","handleSubmit","event","preventDefault","sessions","state","button_status","stringRef","location","room_name","database","ref","update","setState","handleInputChange","value","target","updateUserStory","user_story","story","getData","on","snapshot","team_member","val","isCreator","name","joinRoom","listener","off","data","map","story_point","push","filterMembers","filter","member","render","margin","color","backgroundColor","height","componentDidMount","prevState","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport firebase from '../../FirebaseConfig';\nimport Cards from '../../components/Cards';\nimport Card from '../../components/Card';\n\nconst fibonacciCard = ['0', '1/2', '1', '2', '3', '5', '8', '13', '21', '?', 'Coffe?'];\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      button_status: 'Reveal Cards',\n      team_member: [],\n      story: '',\n      isCreator: false,\n    };\n  }\n\n  render() {\n    return (\n      <div style={{ margin: '30px' }} >\n        <div className=\"App-header\">\n          <h3>The story goes like this:</h3>\n          {\n            this.state.isCreator ? (\n              <form className=\"login-form\" autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                <input type=\"text\" ref='user_story' name='user_story' className=\"Input-text\" placeholder={\n                  this.state.story === \"\" ? (\n                    \"Your user story goes here\"\n                  ) : (\n                      this.state.story\n                    )\n                } onChange={this.handleInputChange} />\n                <button type=\"submit\" className=\"btn btn-primary\">{this.state.button_status}</button>\n              </form>\n            ) : (\n                <p>{this.state.story}</p>\n              )\n          }\n          <hr style={{color: 'white', backgroundColor: 'white', height: 5 }}/>\n          <div className=\"centerDiv\">\n            <ul>\n              {\n                this.state.team_member.map(member =>\n                  <li className=\"cards__card\" key={member.name}>\n                    <Card card={member.name} />\n                  </li>\n                )\n              }\n            </ul>\n          </div>\n\n          <Cards cards={fibonacciCard} />\n        </div>\n      </div>\n    );\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let sessions = this.state.button_status === 'Reveal Cards';\n    let stringRef = this.props.location.state.room_name;\n    firebase.database().ref(stringRef).update({ sessions: sessions });\n    if (sessions) {\n      this.setState.button_status = 'Reset';\n    } else {\n      this.setState.button_status = 'Reveal Cards';\n    }\n  }\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n    this.updateUserStory(value);\n  }\n\n  updateUserStory = (user_story) => {\n    let stringRef = this.props.location.state.room_name;\n    firebase.database().ref(stringRef).update({ story: user_story });\n  }\n\n  getData = () => {\n    let ref = firebase.database().ref(this.props.location.state.room_name);\n    ref.on('value', snapshot => {\n      const team_member = snapshot.val()['team_member'];\n      this.setState({ team_member: team_member, story: snapshot.val()['story'], isCreator: snapshot.val()['creator'] === this.props.location.state.name });\n    });\n  }\n\n  joinRoom = () => {\n    let stringRef = this.props.location.state.room_name + '/team_member';\n    let ref = firebase.database().ref(stringRef);\n    let listener = ref.on('value', snapshot => {\n      ref.off('value', listener);\n      const team_member = [];\n      let data = snapshot.val();\n      if (data !== null) {\n        data.map(({ name, story_point }) => (team_member.push({ name, story_point })));\n      }\n      team_member.push({\n        name: this.props.location.state.name,\n        story_point: '',\n      });\n      const filterMembers = team_member.filter((member) => !team_member[member.name] && (team_member[member.name] = true));\n      firebase.database().ref(stringRef).update(filterMembers);\n    });\n  }\n\n  componentDidMount() {\n    let prevState = this.props.location.state;\n    if (prevState.status === 'join') {\n      this.joinRoom();\n    }\n    this.getData();\n  }\n\n}\n\nexport default Lobby;\n"]},"metadata":{},"sourceType":"module"}