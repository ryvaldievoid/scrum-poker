{"ast":null,"code":"var _jsxFileName = \"/home/ryvaldie/General-Project/scrum-poker/src/containers/Lobby/Lobby.js\";\nimport React from 'react';\nimport firebase from '../../FirebaseConfig';\nimport Cards from '../../components/Cards';\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = () => {\n      let ref = firebase.database().ref(this.props.location.state.room_name);\n      ref.on('value', snapshot => {\n        const team_member = snapshot.val()['team_member'];\n        this.setState({\n          team_member: [],\n          story: snapshot.val()['story']\n        });\n\n        if (team_member !== null) {\n          team_member.map(({\n            name,\n            story_point\n          }) => this.state.team_member.push({\n            name,\n            story_point\n          }));\n          console.log(this.state.team_member);\n        }\n      });\n    };\n\n    this.joinRoom = () => {\n      let stringRef = this.props.location.state.room_name + '/team_member';\n      let ref = firebase.database().ref(stringRef);\n      let listener = ref.on('value', snapshot => {\n        ref.off('value', listener);\n        const team_member = [];\n        let data = snapshot.val();\n\n        if (data !== null) {\n          data.map(({\n            name,\n            story_point\n          }) => team_member.push({\n            name,\n            story_point\n          }));\n        }\n\n        team_member.push({\n          name: this.props.location.state.name,\n          story_point: ''\n        });\n        const filterMembers = team_member.filter(member => !team_member[member.name] && (team_member[member.name] = true));\n        firebase.database().ref(stringRef).update(filterMembers);\n      });\n    };\n\n    this.state = {\n      team_member: [],\n      story: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Cards, {\n      cards: ['0', '1/2', '1', '2', '3', '5', '8', '13', '21', '?', 'Coffe?'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, this.state.story), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, this.state.team_member.map(({\n      name,\n      story_point\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }\n    }, name))))));\n  }\n\n  componentDidMount() {\n    let prevState = this.props.location.state;\n\n    if (prevState.status === 'join') {\n      this.joinRoom();\n    }\n\n    this.getData();\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/home/ryvaldie/General-Project/scrum-poker/src/containers/Lobby/Lobby.js"],"names":["React","firebase","Cards","Lobby","Component","constructor","props","getData","ref","database","location","state","room_name","on","snapshot","team_member","val","setState","story","map","name","story_point","push","console","log","joinRoom","stringRef","listener","off","data","filterMembers","filter","member","update","render","componentDidMount","prevState","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BnBC,OA5BmB,GA4BT,MAAM;AACd,UAAIC,GAAG,GAAGP,QAAQ,CAACQ,QAAT,GAAoBD,GAApB,CAAwB,KAAKF,KAAL,CAAWI,QAAX,CAAoBC,KAApB,CAA0BC,SAAlD,CAAV;AACAJ,MAAAA,GAAG,CAACK,EAAJ,CAAO,OAAP,EAAgBC,QAAQ,IAAI;AAC1B,cAAMC,WAAW,GAAGD,QAAQ,CAACE,GAAT,GAAe,aAAf,CAApB;AACA,aAAKC,QAAL,CAAc;AAAEF,UAAAA,WAAW,EAAE,EAAf;AAAmBG,UAAAA,KAAK,EAAEJ,QAAQ,CAACE,GAAT,GAAe,OAAf;AAA1B,SAAd;;AACA,YAAID,WAAW,KAAK,IAApB,EAA0B;AACxBA,UAAAA,WAAW,CAACI,GAAZ,CAAgB,CAAC;AAAEC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAD,KACd,KAAKV,KAAL,CAAWI,WAAX,CAAuBO,IAAvB,CAA4B;AAAEF,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAA5B,CADF;AAGAE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWI,WAAvB;AACD;AACF,OATD;AAUD,KAxCkB;;AAAA,SA0CnBU,QA1CmB,GA0CR,MAAM;AACf,UAAIC,SAAS,GAAG,KAAKpB,KAAL,CAAWI,QAAX,CAAoBC,KAApB,CAA0BC,SAA1B,GAAsC,cAAtD;AACA,UAAIJ,GAAG,GAAGP,QAAQ,CAACQ,QAAT,GAAoBD,GAApB,CAAwBkB,SAAxB,CAAV;AACA,UAAIC,QAAQ,GAAGnB,GAAG,CAACK,EAAJ,CAAO,OAAP,EAAgBC,QAAQ,IAAI;AACzCN,QAAAA,GAAG,CAACoB,GAAJ,CAAQ,OAAR,EAAiBD,QAAjB;AACA,cAAMZ,WAAW,GAAG,EAApB;AACA,YAAIc,IAAI,GAAGf,QAAQ,CAACE,GAAT,EAAX;;AACA,YAAIa,IAAI,KAAK,IAAb,EAAmB;AACjBA,UAAAA,IAAI,CAACV,GAAL,CAAS,CAAC;AAAEC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAD,KAA4BN,WAAW,CAACO,IAAZ,CAAiB;AAAEF,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAjB,CAArC;AACD;;AACDN,QAAAA,WAAW,CAACO,IAAZ,CAAiB;AACfF,UAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWI,QAAX,CAAoBC,KAApB,CAA0BS,IADjB;AAEfC,UAAAA,WAAW,EAAE;AAFE,SAAjB;AAIA,cAAMS,aAAa,GAAGf,WAAW,CAACgB,MAAZ,CAAoBC,MAAD,IAAY,CAACjB,WAAW,CAACiB,MAAM,CAACZ,IAAR,CAAZ,KAA8BL,WAAW,CAACiB,MAAM,CAACZ,IAAR,CAAX,GAA2B,IAAzD,CAA/B,CAAtB;AACAnB,QAAAA,QAAQ,CAACQ,QAAT,GAAoBD,GAApB,CAAwBkB,SAAxB,EAAmCO,MAAnC,CAA0CH,aAA1C;AACD,OAbc,CAAf;AAcD,KA3DkB;;AAEjB,SAAKnB,KAAL,GAAa;AACXI,MAAAA,WAAW,EAAE,EADF;AAEXG,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAC,GAAD,EAAM,KAAN,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,IAAtC,EAA4C,IAA5C,EAAkD,GAAlD,EAAuD,QAAvD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKvB,KAAL,CAAWO,KAAhB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKP,KAAL,CAAWI,WAAX,CAAuBI,GAAvB,CAA2B,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,kBACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAJ,CADF,CADF,CADF,CAFJ,CAHF,CADF;AAiBD;;AAmCDe,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,GAAG,KAAK9B,KAAL,CAAWI,QAAX,CAAoBC,KAApC;;AACA,QAAIyB,SAAS,CAACC,MAAV,KAAqB,MAAzB,EAAiC;AAC/B,WAAKZ,QAAL;AACD;;AACD,SAAKlB,OAAL;AACD;;AApEiC;;AAwEpC,eAAeJ,KAAf","sourcesContent":["import React from 'react';\nimport firebase from '../../FirebaseConfig';\nimport Cards from '../../components/Cards';\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      team_member: [],\n      story: '',\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <Cards cards={['0', '1/2', '1', '2', '3', '5', '8', '13', '21', '?', 'Coffe?']} />\n        <h1>{this.state.story}</h1>\n        <ul>\n          {\n            this.state.team_member.map(({ name, story_point }) => (\n              <li>\n                <div>\n                  <p>{name}</p>\n                </div>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n\n  getData = () => {\n    let ref = firebase.database().ref(this.props.location.state.room_name);\n    ref.on('value', snapshot => {\n      const team_member = snapshot.val()['team_member'];\n      this.setState({ team_member: [], story: snapshot.val()['story'] });\n      if (team_member !== null) {\n        team_member.map(({ name, story_point }) =>\n          this.state.team_member.push({ name, story_point })\n        );\n        console.log(this.state.team_member);\n      }\n    });\n  }\n\n  joinRoom = () => {\n    let stringRef = this.props.location.state.room_name + '/team_member';\n    let ref = firebase.database().ref(stringRef);\n    let listener = ref.on('value', snapshot => {\n      ref.off('value', listener);\n      const team_member = [];\n      let data = snapshot.val();\n      if (data !== null) {\n        data.map(({ name, story_point }) => (team_member.push({ name, story_point })));\n      }\n      team_member.push({\n        name: this.props.location.state.name,\n        story_point: '',\n      });\n      const filterMembers = team_member.filter((member) => !team_member[member.name] && (team_member[member.name] = true));\n      firebase.database().ref(stringRef).update(filterMembers);\n    });\n  }\n\n  componentDidMount() {\n    let prevState = this.props.location.state;\n    if (prevState.status === 'join') {\n      this.joinRoom();\n    }\n    this.getData();\n  }\n\n}\n\nexport default Lobby;\n"]},"metadata":{},"sourceType":"module"}