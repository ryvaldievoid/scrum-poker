{"ast":null,"code":"import _defineProperty from\"/home/ryvaldie/General-Project/scrum-poker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/ryvaldie/General-Project/scrum-poker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ryvaldie/General-Project/scrum-poker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ryvaldie/General-Project/scrum-poker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ryvaldie/General-Project/scrum-poker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'../../App.css';import banner from'./banner.png';import firebase from'../../FirebaseConfig';var Login=/*#__PURE__*/function(_React$Component){_inherits(Login,_React$Component);var _super=_createSuper(Login);function Login(props){var _this;_classCallCheck(this,Login);_this=_super.call(this,props);_this.getData=function(){_this.setState.loading=true;var ref=firebase.database().ref(_this.state.room_name);var listener=ref.on('value',function(snapshot){ref.off('value',listener);var data=snapshot.val();_this.setState({loading:false,rooms:data});if(data!==null&&_this.state.room_name!==''){// join room\n_this.setState({status:'join'});var _this$state=_this.state,room_name=_this$state.room_name,name=_this$state.name,status=_this$state.status;_this.props.history.push('/lobby',{room_name:room_name,name:name,status:status});}else{// alert('Create or Enter a room name first!');\n// create room\n_this.createRoom();_this.setState({status:'create'});var _this$state2=_this.state,_room_name=_this$state2.room_name,_name=_this$state2.name,_status=_this$state2.status;_this.props.history.push('/lobby',{room_name:_room_name,name:_name,status:_status});}});};_this.createRoom=function(){firebase.database().ref(_this.state.room_name).set({creator:_this.state.name,sessions:false,story:'Your user story',team_member:[{name:_this.state.name,story_point:'',status:false}]});};_this.handleSubmit=function(event){event.preventDefault();_this.getData();};_this.handleInputChange=function(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;_this.setState(_defineProperty({},name,value));};_this.state={loading:false,room_name:'',name:'',status:'',rooms:[]};return _this;}_createClass(Login,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:banner,className:\"App-logo\",alt:\"logo\"}),/*#__PURE__*/React.createElement(\"h1\",null,\"Scrum Poker Online\"),/*#__PURE__*/React.createElement(\"p\",null,\"Enter or Create a Room Here:\"),/*#__PURE__*/React.createElement(\"form\",{className:\"login-form\",autoComplete:\"off\",onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'13px'}},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",ref:\"room_name\",name:\"room_name\",className:\"form-control\",placeholder:\"Room Name\",required:true,onChange:this.handleInputChange,style:{height:'32px',width:\"370px\"}})),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'13px',marginBottom:'13px'}},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",ref:\"name\",name:\"name\",className:\"form-control\",placeholder:\"Name\",required:true,onChange:this.handleInputChange,style:{height:'32px',width:\"370px\"}}))),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary\"},\"Submit\")))));}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.state.room_name===''){// Login first\nconsole.log('login dulu');}else{// Check room\nconsole.log('udah login');this.getData();}}}]);return Login;}(React.Component);export default Login;","map":{"version":3,"sources":["/home/ryvaldie/General-Project/scrum-poker/src/containers/Login/Login.js"],"names":["React","banner","firebase","Login","props","getData","setState","loading","ref","database","state","room_name","listener","on","snapshot","off","data","val","rooms","status","name","history","push","createRoom","set","creator","sessions","story","team_member","story_point","handleSubmit","event","preventDefault","handleInputChange","target","value","marginTop","height","width","marginBottom","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport banner from './banner.png';\nimport firebase from '../../FirebaseConfig';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            room_name: '',\n            name: '',\n            status: '',\n            rooms: [],\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <div>\n                        <img src={banner} className=\"App-logo\" alt=\"logo\" />\n                        <h1>Scrum Poker Online</h1>\n                        <p>Enter or Create a Room Here:</p>\n                        <form className=\"login-form\" autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                            <div className=\"form-row\">\n                                <div style={{ marginTop: '13px' }}>\n                                    <input type=\"text\" ref='room_name' name='room_name' className=\"form-control\" placeholder=\"Room Name\" required onChange={this.handleInputChange} style={{ height: '32px', width: \"370px\" }} />\n                                </div>\n                                <div style={{ marginTop: '13px', marginBottom: '13px' }}>\n                                    <input type=\"text\" ref='name' name='name' className=\"form-control\" placeholder=\"Name\" required onChange={this.handleInputChange} style={{ height: '32px', width: \"370px\" }} />\n                                </div>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                        </form>\n                    </div>\n                </header>\n            </div>\n        );\n    }\n\n    getData = () => {\n        this.setState.loading = true;\n        let ref = firebase.database().ref(this.state.room_name);\n        let listener = ref.on('value', snapshot => {\n            ref.off('value', listener);\n            let data = snapshot.val();\n            this.setState({ loading: false, rooms: data });\n            if (data !== null && this.state.room_name !== '') {\n                // join room\n                this.setState({ status: 'join' });\n                const { room_name, name, status } = this.state;\n                this.props.history.push('/lobby', { room_name, name, status });\n            } else {\n                // alert('Create or Enter a room name first!');\n                // create room\n                this.createRoom();\n                this.setState({ status: 'create' });\n                const { room_name, name, status } = this.state;\n                this.props.history.push('/lobby', { room_name, name, status });\n            }\n        })\n    }\n\n    createRoom = () => {\n        firebase.database().ref(this.state.room_name).set({\n            creator: this.state.name,\n            sessions: false,\n            story: 'Your user story',\n            team_member: [{\n                name: this.state.name,\n                story_point: '',\n                status: false\n            }]\n        });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.getData();\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    componentDidMount() {\n        if (this.state.room_name === '') {\n            // Login first\n            console.log('login dulu');\n        } else {\n            // Check room\n            console.log('udah login');\n            this.getData();\n        }\n    }\n\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}